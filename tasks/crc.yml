---

- name: "{{ crc_mode }} | crc | download and install Code Ready Container with checksum control"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.get_url:
    url: "{{ crc_download_url }}"
    dest: "{{ crc_tmp_dir }}/{{ crc_download_file_name }}"
    mode: "0755"
    owner: "{{ crc_user_owner }}"
    group: "{{ crc_user_group }}"
    checksum: "{{ crc_download_url_checksum }}"

- name: "{{ crc_mode }} | crc | unarchive"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.unarchive:
    src: "{{ crc_tmp_dir }}/{{ crc_download_file_name }}"
    dest: "{{ crc_tmp_dir }}"
    remote_src: yes
    owner: "{{ crc_user_owner }}"
    group: "{{ crc_user_group }}"

- name: "{{ crc_mode }} | crc | put binary in ~/.local/bin"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.copy:
    src: "{{ crc_tmp_dir }}/{{ crc_download_folder_name }}/crc"
    dest: "$HOME/.local/bin"
    remote_src: true
    owner: "{{ crc_user_owner }}"
    group: "{{ crc_user_group }}"
    mode: '0700'

- name: "{{ crc_mode }} | crc | check installed"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.command: $HOME/.local/bin/crc version
  register: __crc_install_status
  changed_when: __crc_install_status.rc != 0

- name: "{{ crc_mode }} | crc | libvirtd service"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.systemd:
    name: libvirtd
    state: started
    enabled: true
  register: __crc_libvirtd_status
  changed_when: __crc_libvirtd_status.state != 'started'

- name: "{{ crc_mode }} | crc | copying over dnsmasq configuration"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.copy:
    content: |
      [main]
      dns=none
    dest: /etc/NetworkManager/conf.d/crc-nm-dnsmasq.conf
    owner: root
    group: root
    mode: 0666

- name: "{{ crc_mode }} | crc | copying over dnsmasq configuration for crc"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.copy:
    content: |
      server=/crc.testing/192.168.130.11
      server=/apps-crc.testing/192.168.130.11
    dest: /etc/NetworkManager/dnsmasq.d/crc.conf
    owner: root
    group: root
    mode: 0666

- name: "{{ crc_mode }} | crc | enable and start NetworkManager service"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.systemd:
    name: NetworkManager
    state: restarted
    enabled: yes

- name: "{{ crc_mode }} | crc | enable and start dnsmasq service"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.systemd:
    name: dnsmasq
    state: restarted
    enabled: yes

- name: "{{ crc_mode }} | crc | copying over pull-secret.txt"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.copy:
    content: "{{ crc_pull_secret }}"
    dest:  "{{ crc_pull_secret_path }}"
    owner: "{{ crc_user_owner }}"
    group: "{{ crc_user_group }}"
    mode: 0666

- name: "{{ crc_mode }} | crc | cleanup CodeReady Deployment"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'absent'
  ansible.builtin.shell: |
    set -o pipefail
    $HOME/.local/bin/crc cleanup | tee /tmp/setup_status.log

- name: "{{ crc_mode }} | crc | setup CodeReady Deployment"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.shell: |
    set -o pipefail
    $HOME/.local/bin/crc config set consent-telemetry yes | tee /tmp/setup_status.log
    $HOME/.local/bin/crc config set nameserver {{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }} | tee /tmp/setup_status.log
    $HOME/.local/bin/crc config set network-mode system | tee /tmp/setup_status.log
    $HOME/.local/bin/crc setup | tee /tmp/setup_status.log

- name: "{{ crc_mode }} | crc | start CodeReady Deployment"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.shell: |
    set -o pipefail
    $HOME/.local/bin/crc start -c {{ crc_cpu }} -m {{ crc_memory }} -p {{ crc_pull_secret_path }} --log-level {{ crc_log_level }} | tee /tmp/install_status.log

- name: "{{ crc_mode }} | crc | ocp and kubectl | download and install Openshift Client and Kubernetes Client with checksum control"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.get_url:
    url: "{{ crc_ocp_download_url }}"
    dest: "{{ crc_tmp_dir }}/{{ crc_ocp_download_file_name }}"
    mode: "0755"
    owner: root
    group: root
    checksum: "{{ crc_ocp_download_url_checksum }}"

- name: "{{ crc_mode }} | crc | ocp and kubectl | unarchive and put it in ~/.local/bin"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.unarchive:
    src: "{{ crc_tmp_dir }}/{{ crc_ocp_download_file_name }}"
    dest: "$HOME/.local/bin"
    remote_src: yes
    exclude:
      - "README.md"

- name: "{{ crc_mode }} | crc | ocp | check installed"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.command: $HOME/.local/bin/oc version
  register: __crc_ocp_install_status
  changed_when: __crc_ocp_install_status.rc != 0

- name: "{{ crc_mode }} | crc | kubectl | check installed"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.command: $HOME/.local/bin/kubectl
  register: __crc_kubectl_install_status
  changed_when: __crc_kubectl_install_status.rc != 0
