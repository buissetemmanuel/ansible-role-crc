---

- name: "{{ crc_mode }} | crc | libvirtd service"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.systemd:
    name: libvirtd
    state: started
    enabled: true
  register: __crc_libvirtd_status
  changed_when: __crc_libvirtd_status.state != 'started'

- name: "{{ crc_mode }} | crc | copying over dnsmasq configuration"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.copy:
    src: 00-use-dnsmasq.conf
    dest: /etc/NetworkManager/conf.d/00-use-dnsmasq.conf
    owner: root
    group: root
    mode: '0644'

- name: "{{ crc_mode }} | crc | copying over dnsmasq configuration for crc"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.template:
    src: 01-crc.conf.j2
    dest: /etc/NetworkManager/dnsmasq.d/01-crc.conf
    owner: root
    group: root
    mode: '0644'

- name: "{{ crc_mode }} | crc | enable and start NetworkManager service"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.systemd:
    name: NetworkManager
    state: restarted
    enabled: yes

#- name: "{{ crc_mode }} | crc | enable and start dnsmasq service"
#  become: true
#  when:
#    - not ansible_check_mode
#    - crc_state == 'present'
#  ansible.builtin.systemd:
#    name: dnsmasq
#    state: restarted
#    enabled: yes

- name: "{{ crc_mode }} | crc | copying over pull-secret.txt"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.copy:
    content: "{{ crc_pull_secret }}"
    dest:  "{{ crc_pull_secret_path }}"
    owner: "{{ crc_user_owner }}"
    group: "{{ crc_user_group }}"
    mode: 0666

- name: "{{ crc_mode }} | crc | setup CodeReady Deployment"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.shell: |
    set -o pipefail
    {{ crc_bin_dir }}/crc config set consent-telemetry yes | tee {{ crc_tmp_dir }}/setup_status.log
    {{ crc_bin_dir }}/crc config set nameserver {{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }} | tee {{ crc_tmp_dir }}/setup_status.log
    {{ crc_bin_dir }}/crc config set network-mode system | tee {{ crc_tmp_dir }}/setup_status.log
    {{ crc_bin_dir }}/crc setup | tee {{ crc_tmp_dir }}/setup_status.log

- name: "{{ crc_mode }} | crc | start CodeReady Deployment"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'present'
  ansible.builtin.shell: |
    set -o pipefail
    {{ crc_bin_dir }}/crc start -c {{ crc_cpu }} -m {{ crc_memory }} -p {{ crc_pull_secret_path }} --log-level {{ crc_log_level }} | tee {{ crc_tmp_dir }}/install_status.log

- name: "{{ crc_mode }} | crc | delete CodeReady Deployment"
  become: true
  become_user: "{{ crc_user_owner }}"
  become_method: community.general.machinectl
  become_exe: "sudo machinectl"
  when:
    - not ansible_check_mode
    - crc_state == 'absent'
  ansible.builtin.shell: |
    set -o pipefail
    {{ crc_bin_dir }}/crc delete --force | tee {{ crc_tmp_dir }}/delete_status.log

- name: "{{ crc_mode }} | crc | delete Network CRC"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'absent'
  ansible.builtin.shell: |
    set -o pipefail
    virsh net-destroy crc | tee {{ crc_tmp_dir }}/delete_status.log
    virsh net-undefine crc | tee {{ crc_tmp_dir }}/delete_status.log

- name: "{{ crc_mode }} | crc | delete pool CRC"
  become: true
  when:
    - not ansible_check_mode
    - crc_state == 'absent'
  ansible.builtin.shell: |
    set -o pipefail
    virsh pool-destroy crc | tee {{ crc_tmp_dir }}/delete_status.log
    virsh pool-undefine crc | tee {{ crc_tmp_dir }}/delete_status.log
